plugins {
    id 'io.qameta.allure' version '2.9.6'
    id 'java'
}

def allureVersion = '2.16.1'
def junitVersion = '5.8.2'


allure {
    version = allureVersion

    useJUnit5 {
        version = allureVersion
    }
}


group 'com.petclinic'
version '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.rest-assured:rest-assured:4.4.0'
    implementation 'org.aeonbits.owner:owner:1.0.12'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
    implementation 'com.github.javafaker:javafaker:1.0.2'
    implementation 'com.natpryce:make-it-easy:4.0.1'
    implementation "io.qameta.allure:allure-rest-assured:$allureVersion"

    testImplementation(platform("org.junit:junit-bom:$junitVersion"))
    testImplementation("org.junit.jupiter:junit-jupiter:$junitVersion")
    testImplementation "io.qameta.allure:allure-junit5:$allureVersion"
    testImplementation "ch.qos.logback:logback-classic:1.2.7"
}

test {
    systemProperty 'env', env
    systemProperty 'testsCategory', testsCategory

    println "Chosen test env: '$env' and tests category: '$testsCategory'"

    useJUnitPlatform {
        includeTags testsCategory.toString()
    }

    testLogging {
        events "passed", "skipped", "failed"
    }
}
